{"version":3,"sources":["Display.js","Search.js","Services/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["Display","contacts","handleDelete","map","contact","style","listStyleType","name","number","onClick","Search","substring","filter","includes","baseURL","axios","get","then","response","data","newContact","post","nameToBeDeleted","id","find","person","delete","newPhoneNumber","newName","contactToBeUpdated","updatedContact","put","App","useState","setContacts","setNewName","newPhone","setNewPhone","newSearch","setNewSearch","useEffect","contactsService","initialContacts","contactsToShow","value","onChange","event","target","onSubmit","preventDefault","some","window","confirm","length","returnedContacts","concat","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb6f9387.chunk.js","sourcesContent":["const Display = ({contacts, handleDelete}) => {\n    return (\n        contacts.map(contact => <li key = {contact.name} style={{listStyleType: \"none\"}}> {contact.name} {contact.number} {\" \"}\n        <button onClick = {() => handleDelete(contacts, contact.name)}> Delete </button> </li>)\n    )\n} \nexport default Display","let Search = (contacts, substring) => {\n    let filteredContact = contacts.filter(contact => contact.name.includes(substring) === true)\n    return filteredContact\n}\nexport default Search","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\"\nconst baseURL = \"/api/contacts\"\n\nconst getAll = () => {\n    const request = axios.get(baseURL)\n    return request.then(response => response.data)\n}\n\nconst create = (newContact) => {\n    const request = axios.post(baseURL, newContact)\n    return request.then(response => response.data) \n}\n\nconst remove = (contacts, nameToBeDeleted) => {\n    const contactToBeDeleted = contacts.find(person => person.name === nameToBeDeleted)\n    const id = contactToBeDeleted.id\n    const request = axios.delete(`${baseURL}/${id}`);\n    return request.then(response => response.data)\n}\n\nconst update = (contacts, newPhoneNumber, newName) => {\n    const contactToBeUpdated = contacts.find(person => person.name === newName)\n    const id = contactToBeUpdated.id\n    const updatedContact = {...contactToBeUpdated, number: newPhoneNumber}\n    const request = axios.put(`${baseURL}/${id}`, updatedContact)\n    return request.then(response => response.data)\n}\n\n\nexport default {getAll, create, remove, update}","import React, { useState, useEffect } from 'react'\nimport Display from './Display'\nimport Search from './Search'\nimport contactsService from './Services/Contacts.js'\n\nconst App = () => {\n  const [ contacts, setContacts ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [ newSearch, setNewSearch] = useState('')\n\n  useEffect(() => {\n    contactsService.getAll().then(initialContacts => setContacts(initialContacts))\n  }, [])\n  \n\n  const addContact = (event) => {\n    event.preventDefault();\n\n    if(contacts.some(contact => contact.name === newName)){\n      //alert(`${newName} is already added to the phonebook`);\n\n      const confirm = window.confirm(`${newName} is already added to the phonebook, do you want to replace the old number with a new one?`)\n      if(confirm){\n        contactsService.update(contacts, newPhone, newName)\n        .then(updatedContact => setContacts(contacts.map(contact => contact.name !== newName ? contact: updatedContact)))\n      }\n    }\n    else{\n      const newContact = {\n        name: newName,\n        number: newPhone,\n        id: contacts.length + 1\n      }\n\n      contactsService.create(newContact).then(returnedContacts => {\n        setContacts(contacts.concat(returnedContacts))\n        setNewName('');\n        setNewPhone('');\n      })\n    }\n  }\n\n  const handleSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }  \n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value);\n  }  \n\n  const handleDelete = (contacts, nameToBeDeleted) => {\n    const confirm = window.confirm(`Are you sure that you want to delete ${nameToBeDeleted}?`)\n    if(confirm){\n      contactsService.remove(contacts, nameToBeDeleted)\n      .then(() => setContacts(contacts.filter(contact => contact.name !== nameToBeDeleted)))\n    }\n  }\n\n  \n  const contactsToShow = newSearch === '' ? contacts : Search(contacts, newSearch)\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <h2>Search</h2>\n      <div> \n        Search: <input\n        value = {newSearch}\n        onChange = {handleSearch}/>\n      </div>\n      <h2>Add New Contacts</h2>\n      <form onSubmit = {addContact}>\n        <div>\n          Name: <input \n          value = {newName}\n          onChange = {handleNameChange}/>\n        </div>\n        <div>\n          Phone: <input \n          value = {newPhone}\n          onChange = {handlePhoneChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Contacts</h2>\n      <Display contacts = {contactsToShow} handleDelete = {handleDelete} /> \n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}